/*
 * 	main.cpp
 *
 *  Created on: 15.05.2014
 *      Author: Shcheblykin
 */

#include <avr/io.h>
#include <avr/interrupt.h>
#include <avr/wdt.h>

#define VERS 0x0200

/**
 *	@mainpage MainPage
 *
 *  @section brief_sec Описание
 *
 *  Программа предназначена для работы ТМ в К400, в отсутствии ЦПП.
 *
 *  Сигналы ТМ напрямую передаются с клеммника на БСП и обратно.
 *
 */

//---МАКРОПОДСТАНОВКИ-----------------------------------------------------------

//-----	Тестовые сигналы
#define LED_VD20 PA0	///< Пин подключения отладочного светодиода VD20.
#define LED_VD19 PA1	///< Пин подключения отладочного светодиода VD19.
#define TP3 PA2			///< Пин подключения отладочной тестовой точки TP3.
#define TP4 PA3			///< Пин подключения отладочной тестовой точки TP4.

//-----	Телемеханика
#define TM_RX PC3		///< Пин подключения входа Телемеханики.
#define TM_TX PC2		///< Пин подключения выхода Телемеханики.

//----- Цифровая ретрансляция
#define DR_RX PD2 		///< Пин подключения входа ЦПП.
#define DR_TX PD3 		///< Пин подключения выхода ЦПП.
#define DR_EN PD4 		///< Пин управления ЦПП.

//----- Связь с БСП
#define BSP_RX PD0		///< Пин подключения входа БСП.
#define BSP_TX PD1		///< Пин подключения выхода БСП.

/// Размещение в области начальной инициализации
#define INITSECTION __attribute__((section(".init3")))


//---ОПИСАНИЕ СТРУКТУР----------------------------------------------------------



//---ОБЪЯВЛЕНИЯ ФУНКЦИЙ---------------------------------------------------------

INITSECTION __attribute__((__naked__)) void low_level_init();

//---ПЕРЕМЕННЫЕ-----------------------------------------------------------------


//---ОПРЕДЕЛЕНИЯ ФУНКЦИЙ--------------------------------------------------------



/** Main.
 *
 * 	При получении посылки от БСП, данные передаются в модуль ЦПП. Далее
 * 	формируется ответ для БСП.
 *
 * 	@return Нет.
 */
__attribute__ ((OS_main)) int main(void) {

	sei();

	while(1) {
		if (PIND & (1 << BSP_RX)) {
			PORTC |= (1 << TM_TX);
		} else {
			PORTC &= ~(1 << TM_TX);
		}

		if (PINC & (1 << TM_RX)) {
			PORTD |= (1 << BSP_TX);
		} else {
			PORTD &= ~(1 << BSP_TX);
		}

		PINA |= (1 << LED_VD19);
		wdt_reset();
	}
}


/**	Инициализация периферии.
 *
 * 	Функция помещается в начальный загрузчик по адресу ".init3".
 * 	@n Неиспользуемые порты по умолчанию настроены на вход с подтяжкой к +.
 */
void low_level_init() {
	// включение сторожевого таймера
	wdt_enable(WDTO_15MS);

	// порт А
	// тестовые выходы
	DDRA = (1 << LED_VD20) | (1 << LED_VD19) | (1 << TP3) | (1 << TP4);
	PORTA = 0x00;

	// порт C
	// телемеханика
	DDRC = (1 << TM_TX) | (0 << TM_RX);
	PORTC = 0x00;

	// PORTD
	// связь с БСП
	DDRD = (1 << BSP_TX) | (0 << BSP_RX);
	PORTD = 0x00;
}
